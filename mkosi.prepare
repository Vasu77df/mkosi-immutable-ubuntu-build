#!/bin/bash

if [ "$container" != "mkosi" ]; then
    exec mkosi-chroot "$SCRIPT" "$@"
fi

set -eEuo pipefail

trap "cleanup_downloads" ERR

function cleanup_downloads() {
    echo -e "==>Cleaning up downloaded artifacts"
    # remove downloaded transient artifacts
    rm -rf "$temp_dir"
    echo -e "---Cleanup Complete---"
}


function setup_data_images() {
	echo "==> Building data images"	
	mkdir -p /data_images
	declare -a images=("home" "var")
	for image in "${images[@]}"
	do
		truncate -s 512MB "/data_images/$image.img"
		mkfs.ext4 -F "/data_images/$image.img"
	done
	echo "==> Create sparse disk data images"
}


function install_cloudwatch_agent() {
    echo "===> Installing Cloudwatch Agent"
    if (command -v amazon-cloudwatch-agent-ctl 2>&1); then
        echo "---Cloudwatch Agent is already installed!---"
    else
        curl https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb  -o "$temp_dir/amazon-cloudwatch-agent.deb"
        dpkg -i "$temp_dir"/amazon-cloudwatch-agent.deb
    if (command -v amazon-cloudwatch-agent-ctl 2>&1); then
            echo "---Cloudwatch Agent installed!---"
        else
            echo "---Cloudwatch Agent installation failed---"
            cleanup_downloads
            exit 1
        fi
    fi
    echo "===> Done!"
}

function install_ssm_agent() {
    echo "===> Installing SSM Agent"
    if (command -v amazon-ssm-agent 2>&1); then
        echo "---SSM Agent is already installed!---"
    else
        curl https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/debian_amd64/amazon-ssm-agent.deb -o "$temp_dir/amazon-ssm-agent.deb"
        dpkg -i "$temp_dir"/amazon-ssm-agent.deb 
    if (command -v amazon-ssm-agent 2>&1); then
            echo "---SSM Agent installed!---"
        else
            echo "---SSM Agent installation failed---"
            cleanup_downloads
            exit 1
        fi
    fi
    echo "===> Done!"
}

function main() {
        echo "==> Installing agents"
	temp_dir=$(mktemp -d)
        install_ssm_agent
        install_cloudwatch_agent
        cleanup_downloads
	echo "==> Setting up data image"
	setup_data_images
}

main

